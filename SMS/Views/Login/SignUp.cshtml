@model SMS.Model.SignupDetails
@using SMS.Core
@{
    ViewBag.Title = "SignUp";
    if (TempData["Already Exists"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Already Exists"]
        </div>
    }
    else if (TempData["RegisterSuccess"] != null)
    {
        <div class="alert alert-success">
            @TempData["RegisterSuccess"]
        </div>
    }
    
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class=" content">
    <h2 class="text-center">User Signup</h2>
    <hr />
    <center>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group align-items-baseline d-flex justify-content-evenly">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group align-items-baseline d-flex justify-content-around">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group align-items-baseline d-flex justify-content-lg-between">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.DropDownListFor(model => model.Designation, new SelectList(SMS.Core.DesignationListFile.designationList), "--select--")
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group align-items-baseline d-flex justify-content-end">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    Male
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                </label>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                <label>
                    Female
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                </label>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group align-items-baseline d-flex justify-content-center">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group align-items-baseline d-flex justify-content-center">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2" >
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group align-items-baseline d-flex justify-content-center">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group align-items-baseline d-flex justify-content-center">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group align-items-baseline d-flex justify-content-center">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 m-2">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group align-items-baseline d-flex justify-content-center">
            <div class="g-4 m-2">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Login", "UserLogin", null, new { @class = "btn btn-success" })

            </div>
        </div>
       
    </center>
</div>
}

