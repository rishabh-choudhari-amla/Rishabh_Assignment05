
@using SMS.Core;
@model SMS.Model.StudentDetails

@{

    ViewBag.Title = "AddStudent";
    if (TempData["DateIncorrect"] != null)
    {
        <div class="alert alert-danger">
            @TempData["DateIncorrect"]
        </div>
    }
    else if (TempData["Invalid Entry"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Invalid Entry"]
        </div>
    }
    if(Model!=null)
    {
        Model.Id = Model.Id;
    }

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal content ">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <h2 class="text-center">Student Registration Form</h2>
    <hr />
    <center>
        <div class="d-flex flex-column d-md-flex">
            <div class="inputfield align-items-baseline d-flex justify-content-between">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.Standard, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9 m-3">
                    @Html.DropDownListFor(model => model.Standard, new SelectList(StandardListFile.standardList), "--select--", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Standard, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">

                    <label>
                        Male
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                    </label>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    <label>
                        Female
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                    </label>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex justify-content-between">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7 m-3">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="inputfield align-items-baseline d-flex flex-row justify-content-center ">
                <div class="col-md-offset-2 col-md-6 m-3">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "StudentList", null, new { @class = "btn btn-success" })
                </div>
            </div>
        </div>

    </center>
</div>
    
    }


